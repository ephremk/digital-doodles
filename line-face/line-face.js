// Generated by CoffeeScript 1.4.0
(function() {
  var art, artCtx, canvasFrame, createVideoStreamer, drawAndMove, frameCount, generateExplosion, generateLineInfo, grabFrame, height, kickOffArt, lineCount, lines, media, pixelDensity, sizeElement, tick, videoData, width;

  pixelDensity = window.devicePixelRatio || 1;

  width = 400;

  height = 400;

  lineCount = 200;

  lines = [];

  media = NaN;

  canvasFrame = NaN;

  videoData = [];

  art = document.createElement('canvas');

  artCtx = NaN;

  frameCount = 0;

  createVideoStreamer = function(stream) {
    var element, elements, _i, _len;
    media = document.createElement('video');
    canvasFrame = document.createElement('canvas');
    elements = [media, canvasFrame];
    for (_i = 0, _len = elements.length; _i < _len; _i++) {
      element = elements[_i];
      sizeElement(element);
    }
    media.src = URL.createObjectURL(stream);
    media.play();
    webkitRequestAnimationFrame(grabFrame);
    return kickOffArt();
  };

  grabFrame = function() {
    webkitRequestAnimationFrame(grabFrame);
    return canvasFrame.getContext('2d').drawImage(media, 0, 0);
  };

  sizeElement = function(element) {
    element.setAttribute('width', width * pixelDensity + "px");
    element.setAttribute('height', width * pixelDensity + "px");
    element.style.width = width + "px";
    return element.style.height = height + "px";
  };

  generateLineInfo = function(x, y) {
    return {
      x: x,
      y: y,
      yVelocity: ~~(Math.random() * 30 * (~~(Math.random() * 2) === 1 ? -1 : 1))
    };
  };

  generateExplosion = function() {
    var i, spacing, _i, _results;
    spacing = ~~(width * 2 / lineCount);
    _results = [];
    for (i = _i = 0; 0 <= lineCount ? _i < lineCount : _i > lineCount; i = 0 <= lineCount ? ++_i : --_i) {
      _results.push(lines.push(generateLineInfo(spacing * i, height)));
    }
    return _results;
  };

  drawAndMove = function(line, i) {
    var alpha, blue, green, position, red, strokeColor;
    (line.y + line.yVelocity <= 0 || line.y + line.yVelocity >= art.height) && (line.yVelocity *= -1);
    position = ((width * line.y) + line.x) * 4;
    strokeColor = "pink";
    red = videoData.data[position];
    green = videoData.data[position + 1];
    blue = videoData.data[position + 2];
    alpha = videoData.data[position + 3];
    if (alpha !== void 0) {
      strokeColor = "rgba(" + red + ", " + green + ", " + blue + ", " + alpha + ")";
    }
    artCtx.strokeStyle = strokeColor;
    artCtx.beginPath();
    artCtx.moveTo(line.x, line.y);
    artCtx.lineTo(line.x, (line.y += line.yVelocity));
    artCtx.stroke();
    return artCtx.closePath();
  };

  tick = function() {
    var i, line, _i, _len;
    artCtx.fillStyle = "rgba(0,0,0,0.01)";
    artCtx.rect(0, 0, art.width, art.height);
    artCtx.fill();
    videoData = canvasFrame.getContext('2d').getImageData(0, 0, width * pixelDensity, height * pixelDensity);
    for (i = _i = 0, _len = lines.length; _i < _len; i = ++_i) {
      line = lines[i];
      drawAndMove(line, i);
    }
    return webkitRequestAnimationFrame(tick);
  };

  kickOffArt = function() {
    document.getElementById('sample').style.display = "none";
    sizeElement(art);
    artCtx = art.getContext('2d');
    document.body.appendChild(art);
    generateExplosion();
    return tick();
  };

  if (!navigator.webkitGetUserMedia) {
    alert("come back in chrome!");
  }

  navigator.webkitGetUserMedia({
    video: true
  }, createVideoStreamer);

}).call(this);
