// Generated by CoffeeScript 1.6.3
var MAX_THRESHOLD, MIN_THRESHOLD, Metaball, balls, build, canvas, ctx, drawMetaballs, drawPixel;

MAX_THRESHOLD = 1;

MIN_THRESHOLD = 0.93;

canvas = null;

balls = [];

ctx = null;

Metaball = (function() {
  function Metaball(x, y, rad) {
    this.x = x;
    this.y = y;
    this.rad = rad;
    this.generateVelocity();
  }

  Metaball.prototype.generateVelocity = function() {
    this.vx = ~~(Math.random() * 2) ? -1 * Math.random() : Math.random();
    return this.vy = ~~(Math.random() * 2) ? -1 * Math.random() : Math.random();
  };

  Metaball.prototype.tick = function() {
    this.x += this.vx;
    return this.y += this.vy;
  };

  Metaball.prototype.calc = function(x, y) {
    return this.rad / ((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));
  };

  return Metaball;

})();

drawPixel = function(x, y) {
  return ctx.fillRect(x, y, 1, 1);
};

build = function() {
  var i, _i;
  for (i = _i = 0; _i < 3; i = ++_i) {
    balls.push(new Metaball(canvas.width * Math.random(), canvas.height * Math.random(), 2000));
  }
  return drawMetaballs();
};

drawMetaballs = function() {
  var i, sum, x, y, _i, _j, _k, _l, _ref, _ref1, _ref2, _ref3;
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = "rgb(255, 255, 255)";
  sum = 0;
  for (y = _i = 0, _ref = canvas.height; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
    for (x = _j = 0, _ref1 = canvas.width; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
      sum = 0;
      for (i = _k = 0, _ref2 = balls.length; 0 <= _ref2 ? _k < _ref2 : _k > _ref2; i = 0 <= _ref2 ? ++_k : --_k) {
        if (balls[i] != null) {
          sum += balls[i].calc(x, y);
          if (sum >= MIN_THRESHOLD && sum <= MAX_THRESHOLD) {
            drawPixel(x, y, sum);
          }
        }
      }
    }
  }
  for (i = _l = 0, _ref3 = balls.length; 0 <= _ref3 ? _l < _ref3 : _l > _ref3; i = 0 <= _ref3 ? ++_l : --_l) {
    balls[i].tick();
  }
  return requestAnimationFrame(drawMetaballs);
};

window.onload = function() {
  var gui;
  gui = new dat.GUI();
  gui.add(this, "MAX_THRESHOLD", 0.01, 2).step(0.01);
  gui.add(this, "MIN_THRESHOLD", 0.01, 1).step(0.01);
  canvas = document.createElement('canvas');
  canvas.setAttribute('width', 800);
  canvas.setAttribute('height', 400);
  ctx = canvas.getContext('2d');
  document.body.appendChild(canvas);
  return build();
};

window.requestAnimationFrame || (window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
  return window.setTimeout(function() {
    return callback(+new Date());
  }, 1000 / 60);
});
