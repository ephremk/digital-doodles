// Generated by CoffeeScript 1.6.2
(function() {
  var Ball;

  window.requestAnimationFrame || (window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
    return window.setTimeout(function() {
      return callback(+new Date());
    }, 1000 / 60);
  });

  Ball = (function() {
    function Ball(context) {
      this.ctx = context;
      this.rad = 20;
      this.x = window.innerWidth / 2 - this.rad / 2;
      this.y = window.innerHeight / 5 - this.rad / 2;
      this.velocity = [(~~(Math.random() * 2) ? Math.random() * 100 : Math.random() * -100), 15];
    }

    Ball.prototype.draw = function() {
      this.y += (this.velocity[1] += 9.8);
      if (this.y + this.rad >= window.innerHeight) {
        this.velocity[0] *= 0.9;
        this.velocity[1] *= -0.8;
        this.y = window.innerHeight - this.rad;
      }
      this.x += this.velocity[0];
      if (this.x + this.rad >= window.innerWidth || this.x <= 0) {
        this.velocity[0] *= -0.9;
        if (this.x <= 0) {
          this.x = 0;
        } else {
          this.x = window.innerWidth - this.rad;
        }
      }
      this.ctx.beginPath();
      this.ctx.arc(this.x, this.y, this.rad, 0, 2 * Math.PI, 0);
      this.ctx.fill();
      return this.ctx.closePath();
    };

    return Ball;

  })();

  window.onload = function() {
    var ball, clock, color, ctx, direction, elm, pixelDensity, run, tick;

    ctx = void 0;
    elm = void 0;
    pixelDensity = void 0;
    clock = 0;
    direction = 1;
    color = "#EA80B0";
    ball = null;
    run = function() {
      var height, width, xOffset;

      width = window.innerWidth;
      height = window.innerHeight;
      elm = document.createElement('canvas');
      pixelDensity = window.devicePixelRatio || 1;
      elm.style.width = width + "px";
      elm.style.height = height + "px";
      xOffset = width * pixelDensity / 2;
      document.body.appendChild(elm);
      elm.setAttribute('width', width * pixelDensity);
      elm.setAttribute('height', height * pixelDensity);
      ctx = elm.getContext('2d');
      ctx.fillStyle = color;
      ball = new Ball(ctx);
      return tick();
    };
    window.onresize = function() {
      var height, width, xOffset;

      width = window.innerWidth;
      height = window.innerHeight;
      elm = document.getElementsByTagName('canvas')[0];
      pixelDensity = window.devicePixelRatio || 1;
      elm.style.width = width + "px";
      elm.style.height = height + "px";
      xOffset = width * pixelDensity / 2;
      elm.setAttribute('width', width * pixelDensity);
      return elm.setAttribute('height', height * pixelDensity);
    };
    tick = function() {
      var c, h, s, w, x, y, _i, _j;

      w = window.innerWidth;
      h = window.innerHeight;
      s = Math.sin(clock);
      c = Math.cos(clock);
      ctx.clearRect(0, 0, w, h);
      ctx.beginPath();
      for (x = _i = 0; _i <= w; x = _i += 10) {
        for (y = _j = 0; _j <= h; y = _j += 10) {
          ctx.arc(x, y, 2, 0, 2 * Math.PI, 0);
        }
      }
      ctx.fill();
      ctx.closePath();
      ball.draw();
      clock += 0.1;
      return requestAnimationFrame(tick);
    };
    return run();
  };

}).call(this);
